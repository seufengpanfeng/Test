<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:tx="http://www.springframework.org/schema/tx"
 	 xmlns:mvc="http://www.springframework.org/schema/mvc"
     xsi:schemaLocation="http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!--注释bean,可以不要-->
    <!--<context:annotation-config/>--> 

	<!--bean注解的扫描-->
	<context:component-scan base-package="com.wgh.dao"></context:component-scan>
	<context:component-scan base-package="com.wgh.controller"></context:component-scan>
	<context:component-scan base-package="com.wgh.pojo"></context:component-scan>
	<context:component-scan base-package="com.wgh.service"></context:component-scan>
	
	<!-- 定义注释驱动 ,注解方式配置事务-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
		<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!--测试junit4-->

	<!--映射器将bean中name标签当做URI请求，可选-->
	<!--适配器，用于寻找实现controler接口的类，可选-->
	<!--视图解析器，可选-->

	<!--引入配置文件properties-->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
				<value>classpath:hibernate.properties</value>
		</property>
	</bean>

	<!-- 配置数据源 -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
				<value>${hibernate.connection.driver_class}</value>
		</property>
		
		<property name="url">
			   <value>${hibernate.connection.url}</value>
		</property>
		
		<property name="username">
			   <value>${hibernate.connection.username}</value>
		</property>
		
		<property name="password">
			   <value>${hibernate.connection.password}</value>
		</property>
	</bean>
	
	



		<!--将datasource注入到sessionFactory-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
				<ref bean="dataSource"/>
		</property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
	</bean>
	
	<!-- 配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView
			</value>
		</property>
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	<!-- 文件名映射控制器 -->
	<bean id="urlMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/admin.html">forwardController</prop>
				<prop key="/top.html">forwardController</prop>
				<prop key="/left.html">forwardController</prop>
				<prop key="/main.html">forwardController</prop>
				<prop key="/bottom.html">forwardController</prop>
				<prop key="/userInfo.html">forwardController</prop>
				
			
				
				<prop key="/insertOrUpdateDept.html">insertOrUpdateDept</prop>
			
			</props>
		</property>
	</bean>

	<!--配置各个视图-->
	
	
	

	  <!-- 多部分文件上传 需配置MultipartResolver处理器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600" />
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>
    <!-- SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
            </props>
        </property>
		</bean>
	
	
	<!--参数控制器-->
	<bean id="insertOrUpdateDept"
		class="org.springframework.web.servlet.mvc.ParameterizableViewController">
		<property name="viewName" value="dept/insertOrUpdateDept" />
	</bean>	

	<!--前置控制器-->
		<bean id="forwardController"
		class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
		
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>-->
	<mvc:annotation-driven/> 
</beans>